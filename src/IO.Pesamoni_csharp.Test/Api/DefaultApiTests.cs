
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Pesamoni_csharp.Client;
using IO.Pesamoni_csharp.Api;
using IO.Pesamoni_csharp.Model;

namespace IO.Pesamoni_csharp.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test TransactionsPost
        /// </summary>
        [Test]
        public void TransactionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string method = null;
            //string amount = null;
            //string mobile = null;
            //string holdername = null;
            //string cardnumber = null;
            //string cvv = null;
            //string exp = null;
            //string currency = null;
            //string account = null;
            //string reference = null;
            //string genericmsg = null;
            //string token = null;
            //string bouquet = null;
            //string payoption = null;
            //string meternumber = null;
            //var response = instance.TransactionsPost(method, amount, mobile, holdername, cardnumber, cvv, exp, currency, account, reference, genericmsg, token, bouquet, payoption, meternumber);
            //Assert.IsInstanceOf<InlineResponse200> (response, "response is InlineResponse200");
        }
        
    }

}
